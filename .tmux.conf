# Reference: https://gist.github.com/tsl0922/d79fc1f8097dde660b34

set-option -g default-terminal screen-256color

# .bashrc als default fuer tmux for use of aliases
set-option -g default-command "bash --rcfile ~/.bashrc"

# .bash_history for tmux 
set-option -g history-file ~/.bashr_history



# set leader key to ctrl space
unbind-key C-b
set-option -g prefix C-b
bind-key C-b send-prefix


unbind %
bind-key % split-window -h
unbind '"'
bind-key 2 split-window -v
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R


# reread tmux conf
unbind r
bind r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# window resize vim style
bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5
bind -r h resize-pane -L 5


# mouse enable
set -g mouse on

#enable copy mode
set-window-option -g mode-keys vi

bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection

unbind -T copy-mode-vi MouseDragEnd1hPane


# tpm plgin
set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'christoomey/vim-tmux-navigator'
# persist tmux sessions after computer restart
set -g @plugin 'tmux-plugins/tmux-resurrect'' 
# automatically saves sessions every 15min
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'on'

### typecraft dracula fun plugins network network-bandwidth 
set -g @dracula-ram-usage-label "RAM"
set -g @dracula-ping-server "google.com"
set -g @dracula-ping-rate 5















# keep at bottom of this file initialize tmux plugin manager
run '~/.tmux/plugins/tpm/tpm'



## navigate through windows like screen
#bind-key C-m-n next
#bind-key C-m-p prev
#
## Easy config reload
#bind-key R source-file ~/.tmate.conf \; display-message "tmate.conf reloaded."
#
## vi is good
#setw -g mode-keys vi
#
## mouse behavior
#setw -g mouse on
#
#
#
#bind-key : command-prompt
#bind-key r refresh-client
#bind-key L clear-history
#
#bind-key space next-window
#bind-key bspace previous-window
#bind-key enter next-layout
#
## use vim-like keys for splits and windows
#bind-key v split-window -h
#bind-key s split-window -v
#bind-key h select-pane -L
#bind-key j select-pane -D
#bind-key k select-pane -U
#bind-key l select-pane -R
#
## smart pane switching with awareness of vim splits
#bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
#bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
#bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
#bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
#bind C-l send-keys 'C-l'
#
#bind-key C-o rotate-window
#
#bind-key + select-layout main-horizontal
#bind-key = select-layout main-vertical
#set-window-option -g other-pane-height 25
#set-window-option -g other-pane-width 80
#
#bind-key a last-pane
#bind-key q display-panes
#bind-key c new-window
#bind-key t next-window
#bind-key T previous-window
#
#bind-key [ copy-mode
#bind-key ] paste-buffer
#
## Setup 'v' to begin selection as in Vim
#bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
#
## Update default binding of `Enter` to also use copy-pipe
#unbind -t vi-copy Enter
#bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
#
#set-window-option -g display-panes-time 1500
#
## Status Bar
#set-option -g status-interval 1
#set-option -g status-left ''
#set-option -g status-right '%l:%M%p'
#set-window-option -g window-status-current-fg magenta
#set-option -g status-fg default
#
## Status Bar solarized-dark (default)
#set-option -g status-bg black
#set-option -g pane-active-border-fg yellow
#set-option -g pane-border-fg cyan
#
## Status Bar solarized-light
#if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g status-bg white"
#if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g pane-active-border-fg white"
#if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g pane-border-fg white"
#
## Set window notifications
#setw -g monitor-activity on
#set -g visual-activity on
#
## Enable native Mac OS X copy/paste
#set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"
#
## Allow the arrow key to be used immediately after changing windows
#set-option -g repeat-time 0
